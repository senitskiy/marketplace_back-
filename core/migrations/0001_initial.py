# Generated by Django 4.0.2 on 2022-05-29 12:16

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Blockchain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('idChain', models.IntegerField(default=0)),
                ('rpcURL', models.URLField()),
                ('browserURL', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MNFT',
            fields=[
                ('address', models.CharField(max_length=300, primary_key=True, serialize=False, unique=True)),
                ('alias', models.CharField(max_length=300, unique=True)),
                ('displayName', models.CharField(blank=True, max_length=300, null=True)),
                ('tokenId', models.IntegerField(default=0)),
                ('description', models.CharField(blank=True, max_length=300, null=True)),
                ('price', models.FloatField(default=0.0)),
                ('priceAd', models.FloatField(default=0.0)),
                ('startRent', models.DateTimeField(blank=True, null=True)),
                ('endRent', models.DateTimeField(blank=True, null=True)),
                ('OriginCID', models.CharField(blank=True, max_length=300, null=True)),
                ('AdvCID', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('address', models.CharField(max_length=300, primary_key=True, serialize=False, unique=True)),
                ('alias', models.CharField(max_length=300, unique=True)),
                ('displayName', models.CharField(blank=True, max_length=300, null=True)),
                ('avatar', models.URLField(blank=True, null=True)),
                ('avatarMNFT', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='avatars', to='core.mnft')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MNFTCollection',
            fields=[
                ('address', models.CharField(max_length=300, primary_key=True, serialize=False, unique=True)),
                ('alias', models.CharField(max_length=300, unique=True)),
                ('displayName', models.CharField(blank=True, max_length=300, null=True)),
                ('symbol', models.CharField(max_length=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('blockchain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mnft_collections', to='core.blockchain')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='mnft',
            name='collection',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mnfts', to='core.mnftcollection'),
        ),
        migrations.AddField(
            model_name='mnft',
            name='creatorAddress',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mnfts_creator', to='core.user'),
        ),
        migrations.AddField(
            model_name='mnft',
            name='ownerAddress',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mnfts_owner', to='core.user'),
        ),
        migrations.AddField(
            model_name='mnft',
            name='sponsorAddress',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mnfts_lord', to='core.user'),
        ),
    ]
